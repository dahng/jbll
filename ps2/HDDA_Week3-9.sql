-- Ex.1 CREATE PROCEDURE

-- 1)
CREATE OR REPLACE PROCEDURE DEPT_INFO(
    V_DEPT_ID DEPARTMENTS.DEPARTMENT_ID%TYPE,
    V_INFO OUT DEPARTMENTS%ROWTYPE)
IS
BEGIN
    SELECT * INTO V_INFO FROM DEPARTMENTS
        WHERE DEPARTMENT_ID = V_DEPT_ID;
    DBMS_OUTPUT.PUT_LINE('DEPARTMENT NAME: ' || V_INFO.DEPARTMENT_NAME);
    DBMS_OUTPUT.PUT_LINE('MANAGER ID: ' || V_INFO.MANAGER_ID);
    DBMS_OUTPUT.PUT_LINE('LOCATION ID: ' || V_INFO.LOCATION_ID);
    EXCEPTION WHEN NO_DATA_FOUND THEN  
        DBMS_OUTPUT.PUT_LINE('DEPARTMENT NOT FOUND');
END DEPT_INFO;

-- 2)
CREATE OR REPLACE PROCEDURE ADD_JOB(
    V_JOB_ID    JOBS.JOB_ID%TYPE,
    V_JOB_TITLE JOBS.JOB_TITLE%TYPE)
IS
    V_CID       JOBS.JOB_ID%TYPE;
    V_MATCH_ID  EXCEPTION;
BEGIN
    SELECT JOB_ID INTO V_CID FROM JOBS
        WHERE V_JOB_ID = JOB_ID;
    IF V_CID IS NOT NULL THEN
        RAISE V_MATCH_ID;
    END IF;
EXCEPTION
    WHEN V_MATCH_ID THEN
        DBMS_OUTPUT.PUT_LINE('JOB ID ALREADY EXISTS');
    WHEN NO_DATA_FOUND THEN
        INSERT INTO JOBS VALUES (V_JOB_ID, V_JOB_TITLE, NULL, NULL);
        DBMS_OUTPUT.PUT_LINE('ADDED JOB SUCCESSFULLY');
END;

-- 3)
CREATE OR REPLACE PROCEDURE UPDATE_COMM(V_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE)
IS
    V_CID       EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
    SELECT EMPLOYEE_ID INTO V_CID FROM EMPLOYEES
        WHERE V_EMP_ID = JOB_ID;
    UPDATE EMPLOYEES
        SET COMMISSION_PCT = COMMISSION_PCT * 1.05
        WHERE V_EMP_ID = EMPLOYEE_ID;
    DBMS_OUTPUT.PUT_LINE('UPDATE COMMISSION SUCCESSFULLY');    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('INVALID EMPLOYEE ID');
END;
-- 4)
CREATE OR REPLACE PROCEDURE ADD_EMP(
    V_EMP_ID        EMPLOYEES.EMPLOYEE_ID%TYPE,
    V_FNAME         EMPLOYEES.FIRST_NAME%TYPE,
    V_LNAME         EMPLOYEES.LAST_NAME%TYPE,
    V_EMAIL         EMPLOYEES.EMAIL%TYPE,
    V_PHONE_NUMBER  EMPLOYEES.PHONE_NUMBER%TYPE,
    V_FIRE_DATE     EMPLOYEES.HIRE_DATE%TYPE,
    V_JOB_ID        EMPLOYEES.JOB_ID%TYPE,
    V_SALARY        EMPLOYEES.SALARY%TYPE,
    V_CMS_PCT       EMPLOYEES.COMMISSION_PCT%TYPE,
    V_MANAGER_ID    EMPLOYEES.MANAGER_ID%TYPE,
    V_DEPT_ID       EMPLOYEES.DEPARTMENT_ID%TYPE)
IS
    V_CID           EMPLOYEES.EMPLOYEE_ID%TYPE;
    V_MATCH_ID      EXCEPTION;
BEGIN
    SELECT EMPLOYEE_ID INTO V_CID FROM EMPLOYEES
        WHERE V_EMP_ID = EMPLOYEE_ID;
    IF V_CID IS NOT NULL THEN
        RAISE V_MATCH_ID;
    ELSE
        INSERT INTO EMPLOYEES VALUES(
            V_EMP_ID,
            V_FNAME,
            V_LNAME,
            V_EMAIL,
            V_PHONE_NUMBER,
            V_FIRE_DATE,
            V_JOB_ID,
            V_SALARY,
            V_CMS_PCT,
            V_MANAGER_ID,
            V_DEPT_ID
        );
        DBMS_OUTPUT.PUT_LINE('ADDED EMPLOYEE SUCCESSFULLY');
    END IF;
EXCEPTION
    WHEN V_MATCH_ID THEN
        DBMS_OUTPUT.PUT_LINE('INVALID EMPLOYEE ID');
END;

-- 5)
CREATE OR REPLACE PROCEDURE DELETE_EMP(V_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE)
IS
    V_CID           EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
    SELECT EMPLOYEE_ID INTO V_CID FROM EMPLOYEES
        WHERE V_EMP_ID = EMPLOYEE_ID;
    DELETE FROM EMPLOYEES WHERE V_EMP_ID = EMPLOYEE_ID;
    DBMS_OUTPUT.PUT_LINE('DELETE EMPLOYEE SUCCESSFULLY');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('INVALID EMPLOYEE ID');
END;

-- 6)

-- 7)

-- 8)


-- Ex.2

-- 1)

-- 2)

-- 3)

-- 4)

-- 5)

-- Ex.3

-- 1)

-- 2)

-- 3)

-- 4)
